# zmodload zsh/zprof


# https://gist.github.com/ctechols/ca1035271ad134841284
#
# On slow systems, checking the cached .zcompdump file to see if it must be 
# regenerated adds a noticable delay to zsh startup.  This little hack restricts 
# it to once a day.  It should be pasted into your own completion file.
#
# The globbing is a little complicated here:
# - '#q' is an explicit glob qualifier that makes globbing work within zsh's [[ ]] construct.
# - 'N' makes the glob pattern evaluate to nothing when it doesn't match (rather than throw a globbing error)
# - '.' matches "regular files"
# - 'mh+24' matches files (or directories or whatever) that are older than 24 hours.
# autoload -Uz compinit 
# if [[ -n ${ZDOTDIR}/.zcompdump(#qN.mh+24) ]]; then
# 	compinit;
# else
# 	compinit -C;
# fi;


# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH

# Path to your oh-my-zsh installation.
export ZSH="$HOME/.oh-my-zsh"
# export ZSH=/Users/zouying/.oh-my-zsh


# Set name of the theme to load. Optionally, if you set this to "random"
# it'll load a random theme each time that oh-my-zsh is loaded.
# See https://github.com/robbyrussell/oh-my-zsh/wiki/Themes
ZSH_THEME="robbyrussell"

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion. Case
# sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# The optional three formats: "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
# plugins=(git osx brew python tmux virtualenv z ssh-agent go colorize)
plugins=(
	git
	z
	ssh-agent
	tmux
	docker
	# zsh-autosuggestion
)

source $ZSH/oh-my-zsh.sh


# --- begin zplug ----
# Install ZPLUS
source ~/.zplug/init.zsh


# Can manage local plugins
# zplug "~/.zsh", from:local


# theme
zplug 'dracula/zsh', as:theme

# Install plugins if there are plugins that have not been installed
if ! zplug check --verbose; then
    printf "Install? [y/N]: "
    if read -q; then
        echo; zplug install
    fi
fi

# Then, source plugins and add commands to $PATH
# zplug load --verbose
zplug load
### --- end zplug ---


# User configuration
# You may need to manually set your language environment
export LANG=en_US.UTF-8

# git diff/show with utf-8
export LESSCHARSET=utf-8


# use nvim first
if type nvim > /dev/null 2>&1; then
  alias vim='nvim'
fi

if type docker-compose > /dev/null 2>&1; then
  alias dc=docker-compose
fi

# httpstat: curl with color
# go get github.com/davecheney/httpstat
# if type httpstat > /dev/null 2>&1; then
# 	alias curl=httpstat
# fi

alias ls='ls -GpF'  # Mac OS specific
alias ll='ls -alGpF'  # Mac OS specific
alias dc=docker-compose

alias setproxy="export ALL_PROXY=socks5://127.0.0.1:1086"
alias unsetproxy="unset ALL_PROXY"

# for fzf preview
alias pp='fzf --preview '"'"'[[ $(file --mime {}) =~ binary ]] && echo {} is a binary file || (highlight -O ansi -l {} || coderay {} || rougify {} || cat {}) 2> /dev/null | head -500'"'"
alias oo='fzf --preview '"'"'[[ $(file --mime {}) =~ binary ]] && echo {} is a binary file || (highlight -O ansi -l {} || coderay {} || rougify {} || tac {}) 2> /dev/null | head -500'"'"  # flashback

# enable colors
export CLICOLOR=1
# blue dir
export LSCOLORS=ExFxBxDxCxegedabagacad
# green dir
# export LSCOLORS=cxBxhxDxfxhxhxhxhxcxcx

# support colors in less
export LESS_TERMCAP_mb=$'\E[01;31m'
export LESS_TERMCAP_md=$'\E[01;31m'
export LESS_TERMCAP_me=$'\E[0m'
export LESS_TERMCAP_se=$'\E[0m'
export LESS_TERMCAP_so=$'\E[01;44;33m'
export LESS_TERMCAP_ue=$'\E[0m'
export LESS_TERMCAP_us=$'\E[01;32m'


export GOROOT=/usr/local/go/
export GOPATH=$HOME/GOPATH
export PATH=$PATH:/usr/local/go/bin:$GOPATH/bin/

# plugins
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# alias python=python3
# alias pip=pip3
# alias code='code-insiders'


# start the ssh-agent in the background
# eval "$(ssh-agent -s)"
# ssh-add ~/.ssh/id_rsa

cover () {
    t="/tmp/go-cover.$$.tmp"
    go test -coverprofile=$t $@ && go tool cover -html=$t && unlink $t
}

# vsocde / vsocde-insider
# if ! type "$code-insiders" > /dev/null 2>&1; then
# 	alias code=code-insiders
# fi

# brew-bottles
export HOMEBREW_BOTTLE_DOMAIN=https://mirrors.ustc.edu.cn/homebrew-bottles

# Add RVM to PATH for scripting. Make sure this is the last PATH variable change.
# export PATH="$PATH:$HOME/.rvm/bin"

## #Add anaconda
## export PATH=$PATH:$HOME/anaconda/bin/
## export PATH=$HOME/anaconda3/bin:$PATH
export PATH=$PATH:$HOME/miniconda3/bin/

export VIRTUAL_ENV_DISABLE_PROMPT=

# add zybin
export PATH=$PATH:$HOME/Tools/zybin

# color 256 color
# export TERM=xterm-256color

# pure theme for zsh
# autoload -U promptinit; promptinit
# prompt pure


source $ZSH_CUSTOM/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh


# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('/Users/zouying/miniconda3/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "/Users/zouying/miniconda3/etc/profile.d/conda.sh" ]; then
        . "/Users/zouying/miniconda3/etc/profile.d/conda.sh"
    else
        export PATH="/Users/zouying/miniconda3/bin:$PATH"
    fi
fi
unset __conda_setup
# <<< conda initialize <<<


# ----- git alias -----
# gcp "initial commit"
function gcp() {
      git commit -am "$1" && git push 
}

# gfc "<commit message>"
function gfc() {
         git log --all --grep="$1"
}


# added by travis gem
[ -f /Users/zouying/.travis/travis.sh ] && source /Users/zouying/.travis/travis.sh

# PATH
export PATH=$PATH:$HOME/zybin/

# tabtab source for electron-forge package
# uninstall by removing these lines or running `tabtab uninstall electron-forge`
[[ -f /Users/zouying/src/Github.com/ZOUYING/my-image-gallery/zimage/node_modules/tabtab/.completions/electron-forge.zsh ]] && . /Users/zouying/src/Github.com/ZOUYING/my-image-gallery/zimage/node_modules/tabtab/.completions/electron-forge.zsh
export PATH="$HOME/.yarn/bin:$HOME/.config/yarn/global/node_modules/.bin:$PATH"


# make sure it's end
# zprof

